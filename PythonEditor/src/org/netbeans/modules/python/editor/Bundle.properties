OpenIDE-Module-Display-Category=Python
OpenIDE-Module-Name=Python Editor
OpenIDE-Module-Short-Description=Python Editor
text/x-python=Python
#Templates/Other/PythonCompiledTemplate.pyc=Empty PythonCompiled file
Templates/Python/_main.py=Executable Module
Templates/Python/_module.py=Module
Templates/Python/_empty_module.py=Empty Module
Templates/Python/_package=Python Package
Templates/Python/_test.py=Unit Test
Templates/Python/_init.py=Package __init__ File
Services/MIMEResolver/PythonCompiledResolver.xml=PythonCompiled Files
Services/MIMEResolver/PythonResolver.xml=Python Files

NoCommentFound=No comment found
Documented=(documented)
NoDoced=(:nodoc:)
PythonLib=Python Library
In=in

CTL_Hints_DisplayName=Hints
CTL_Hints_ToolTip=Hints And Warnings for Python Code
UnsafeIdentifierName=Only a-z, A-Z, digits and underscore are safe in Python names
BuiltinPython={0} is a built-in facility and has no Python source

goto-super-implementation=Go to Super Implementation

# {0}: Variable name
SpecifyTypeHtml=NetBeans cannot figure out the type of this variable (<code>{0}</code>).<br><br>\
 You can tell NetBeans what the type is, such that code completion \
 (and other features which depend upon type knowledge) can do their job.
SpecifyTypeOf=Specify type of <code>{0}</code>

# Templates
ct_wh=while loop
ct_cls=Class
ct_def=Method
ct_init=Constructor
ct_bre=Break out of loop
ct_cont=Continue in loop
ct_asse=Assert - check condition
ct_forin=For loop range
ct_imp=import Statement
ct_trye=try catch else
ct_tryf=try catch finally - the finally block will run regarless whether or not exception occurs
ct_ife=if else Statement
ct_rai=raise an Exception
ct_if=if Statement
ct_prn=Print statement
ct_try=try catch
ct_vdoc=Add a type definition comment for a variable
